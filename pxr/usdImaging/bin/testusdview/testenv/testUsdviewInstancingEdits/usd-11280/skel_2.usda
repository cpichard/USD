#usda 1.0
(
    defaultPrim = "skel_instances"
    endTimeCode = 5
    framesPerSecond = 24
    startTimeCode = 1
    upAxis = "Y"
)

def Camera "main_cam"
{
    float2 clippingRange = (0.1, 10000)
    float focalLength = 0.5
    float fStop = 0
    float horizontalAperture = 0.414214
    token projection = "perspective"
    float verticalAperture = 0.23299538
    matrix4d xformOp:transform = ( (0.9994308788692468, 2.893974498657282e-8, 0.03373304555838733, 0), (0.012491544915414274, 0.9289095595760087, -0.37009592193637, 0), (-0.03133495920328062, 0.3703066703805166, 0.9283808971555932, 0), (-33, 3.2, 28, 1) )
    uniform token[] xformOpOrder = ["xformOp:transform"]
}

def Xform "skel_instances" (
    kind = "component"
)
{
    def Xform "agent1_0" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        append rel skel:animationSource = </skel_instances/agent1_0/animation>
        matrix4d xformOp:transform.timeSamples = {
            1: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-33.994136810302734, 0, 12.855428695678711, 1) ),
            2: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-33.994136810302734, 0, 12.855428695678711, 1) ),
            3: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-33.994136810302734, 0, 12.855428695678711, 1) ),
            4: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-33.994136810302734, 0, 12.855428695678711, 1) ),
            5: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-33.994136810302734, 0, 12.855428695678711, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def SkelAnimation "animation"
        {
            uniform token[] joints = ["joint1", "__locomotion__", "joint1/joint2", "joint1/joint2/joint3"]
            quatf[] rotations.timeSamples = {
                1: [(-0.5, -0.5, -0.5, -0.5), (1, 0, 0, 0), (0.8138218, 0, 0.5811146, 0), (0.5, -0.5, -0.5, -0.5)],
                2: [(-0.5, -0.5, -0.5, -0.5), (1, 0, 0, 0), (0.8821957, 0, 0.47088298, 0), (0.5, -0.5, -0.5, -0.5)],
                3: [(-0.5, -0.5, -0.5, -0.5), (1, 0, 0, 0), (0.9357258, 0, 0.35272825, 0), (0.5, -0.5, -0.5, -0.5)],
                4: [(-0.5, -0.5, -0.5, -0.5), (1, 0, 0, 0), (0.9735114, 0, 0.22863844, 0), (0.5, -0.5, -0.5, -0.49999997)],
                5: [(-0.5, -0.5, -0.5, -0.5), (1, 0, 0, 0), (0.9949167, 0, 0.10070148, 0), (0.5, -0.5, -0.5, -0.5)],
            }
            half3[] scales.timeSamples = {
                1: [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)],
                2: [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)],
                3: [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)],
                4: [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)],
                5: [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)],
            }
            float3[] translations.timeSamples = {
                1: [(0, -1, 0), (0, 0, 0), (1, 0, 0), (1, 0, 0)],
                2: [(0, -1, 0), (0, 0, 0), (1, 0, 0), (1, 0, 0)],
                3: [(0, -1, 0), (0, 0, 0), (1, 0, 0), (0.99999994, 0, 0)],
                4: [(0, -1, 0), (0, 0, 0), (1, 0, 0), (1, 0, -2.9802322e-8)],
                5: [(0, -1, 0), (0, 0, 0), (1, 0, 0), (1, 0, 0)],
            }
        }

        over "geometry" (
            instanceable = true
            prepend references = </skel_instances/Prototypes/default>
        )
        {
            float3[] extent.timeSamples = {
                1: [(0, -1, 0), (0, 0, 0)],
                2: [(0, -1, 0), (0, 0, 0)],
                3: [(0, -1, 0), (0, 0, 0)],
                4: [(0, -1, 0), (0, 0, 0)],
                5: [(0, -1, 0), (0, 0, 0)],
            }
        }
    }

    def Scope "Prototypes"
    {
        uniform token visibility = "invisible"

        def SkelRoot "default"
        {
            def Skeleton "skeleton"
            {
                uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (-0, 1, 0, 0), (0, -0, 1, 0), (0, 0, -0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (-0, 1, 0, 0), (0, -0, 1, 0), (1, 0, -0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )]
                uniform token[] jointNames = ["joint1", "__locomotion__", "joint2", "joint3"]
                uniform token[] joints = ["joint1", "__locomotion__", "joint1/joint2", "joint1/joint2/joint3"]
                uniform token purpose = "guide"
                uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (-0, 1, 0, 0), (0, -0, 1, 0), (0, 0, -0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (1, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-1, 0, 0, 1) )]
            }

            def Mesh "Mesh" (
                prepend apiSchemas = ["SkelBindingAPI"]
            )
            {
                int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [0, 1, 13, 12, 1, 2, 14, 13, 2, 3, 15, 14, 3, 4, 16, 15, 4, 5, 17, 16, 5, 6, 18, 17, 6, 7, 19, 18, 7, 8, 20, 19, 8, 9, 21, 20, 9, 10, 22, 21, 10, 11, 23, 22, 11, 0, 12, 23, 12, 13, 26, 25, 13, 14, 27, 26, 14, 15, 28, 27, 15, 16, 29, 28, 16, 17, 30, 29, 17, 18, 31, 30, 18, 19, 32, 31, 19, 20, 33, 32, 20, 21, 34, 33, 21, 22, 35, 34, 22, 23, 36, 35, 23, 12, 25, 36, 25, 26, 38, 37, 26, 27, 39, 38, 27, 28, 40, 39, 28, 29, 41, 40, 29, 30, 42, 41, 30, 31, 43, 42, 31, 32, 44, 43, 32, 33, 45, 44, 33, 34, 46, 45, 34, 35, 47, 46, 35, 36, 48, 47, 36, 25, 37, 48, 37, 38, 50, 49, 38, 39, 51, 50, 39, 40, 52, 51, 40, 41, 53, 52, 41, 42, 54, 53, 42, 43, 55, 54, 43, 44, 56, 55, 44, 45, 57, 56, 45, 46, 58, 57, 46, 47, 59, 58, 47, 48, 60, 59, 48, 37, 49, 60, 49, 50, 62, 61, 50, 51, 63, 62, 51, 52, 64, 63, 52, 53, 65, 64, 53, 54, 66, 65, 54, 55, 67, 66, 55, 56, 68, 67, 56, 57, 69, 68, 57, 58, 70, 69, 58, 59, 71, 70, 59, 60, 72, 71, 60, 49, 61, 72, 61, 62, 74, 73, 62, 63, 75, 74, 63, 64, 76, 75, 64, 65, 77, 76, 65, 66, 78, 77, 66, 67, 79, 78, 67, 68, 80, 79, 68, 69, 81, 80, 69, 70, 82, 81, 70, 71, 83, 82, 71, 72, 84, 83, 72, 61, 73, 84, 1, 0, 24, 2, 1, 24, 3, 2, 24, 4, 3, 24, 5, 4, 24, 6, 5, 24, 7, 6, 24, 8, 7, 24, 9, 8, 24, 10, 9, 24, 11, 10, 24, 0, 11, 24, 73, 74, 85, 74, 75, 85, 75, 76, 85, 76, 77, 85, 77, 78, 85, 78, 79, 85, 79, 80, 85, 80, 81, 85, 81, 82, 85, 82, 83, 85, 83, 84, 85, 84, 73, 85]
                uniform token orientation = "rightHanded"
                point3f[] points = [(-1, -0.25, 0.4330127), (-1, -0.4330127, 0.25), (-1, -0.5, 0), (-1, -0.4330127, -0.25), (-1, -0.25, -0.4330127), (-1, 0, -0.5), (-1, 0.25, -0.4330127), (-1, 0.4330127, -0.25), (-1, 0.5, 0), (-1, 0.4330127, 0.25), (-1, 0.25, 0.4330127), (-1, 0, 0.5), (-1, -0.5, 0.8660254), (-1, -0.8660254, 0.5), (-1, -1, 0), (-1, -0.8660254, -0.5), (-1, -0.5, -0.8660254), (-1, 0, -1), (-1, 0.5, -0.8660254), (-1, 0.8660254, -0.5), (-1, 1, 0), (-1, 0.8660254, 0.5), (-1, 0.5, 0.8660254), (-1, 0, 1), (-1, 0, 0), (0, -0.5, 0.8660254), (0, -0.8660254, 0.5), (0, -1, 0), (0, -0.8660254, -0.5), (0, -0.5, -0.8660254), (0, 0, -1), (0, 0.5, -0.8660254), (0, 0.8660254, -0.5), (0, 1, 0), (0, 0.8660254, 0.5), (0, 0.5, 0.8660254), (0, 0, 1), (1, -0.5, 0.8660254), (1, -0.8660254, 0.5), (1, -1, 0), (1, -0.8660254, -0.5), (1, -0.5, -0.8660254), (1, 0, -1), (1, 0.5, -0.8660254), (1, 0.8660254, -0.5), (1, 1, 0), (1, 0.8660254, 0.5), (1, 0.5, 0.8660254), (1, 0, 1), (2, -0.5, 0.8660254), (2, -0.8660254, 0.5), (2, -1, 0), (2, -0.8660254, -0.5), (2, -0.5, -0.8660254), (2, 0, -1), (2, 0.5, -0.8660254), (2, 0.8660254, -0.5), (2, 1, 0), (2, 0.8660254, 0.5), (2, 0.5, 0.8660254), (2, 0, 1), (3, -0.5, 0.8660254), (3, -0.8660254, 0.5), (3, -1, 0), (3, -0.8660254, -0.5), (3, -0.5, -0.8660254), (3, 0, -1), (3, 0.5, -0.8660254), (3, 0.8660254, -0.5), (3, 1, 0), (3, 0.8660254, 0.5), (3, 0.5, 0.8660254), (3, 0, 1), (3, -0.25, 0.4330127), (3, -0.4330127, 0.25), (3, -0.5, 0), (3, -0.4330127, -0.25), (3, -0.25, -0.4330127), (3, 0, -0.5), (3, 0.25, -0.4330127), (3, 0.4330127, -0.25), (3, 0.5, 0), (3, 0.4330127, 0.25), (3, 0.25, 0.4330127), (3, 0, 0.5), (3, 0, 0)] (
                    interpolation = "vertex"
                )
                uniform matrix4d primvars:skel:geomBindTransform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0] (
                    elementSize = 3
                    interpolation = "vertex"
                )
                uniform float[] primvars:skel:jointWeights = [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.5, 0.5, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 0.75, 0.25, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0] (
                    elementSize = 3
                    interpolation = "vertex"
                )
                uniform token[] skel:joints = ["joint1", "joint1/joint2", "joint1/joint2/joint3"]
                uniform token subdivisionScheme = "none"
                uniform token primvars:skel:skinningMethod = "classicLinear"

                rel skel:skeleton = </skel_instances/Prototypes/default/skeleton>
            }
        }
    }
}

