#usda 1.0
(
    upAxis = "Y"
)

def Xform "World" (
    kind = "group"
)
{
    def Sphere "PlainSphere" (
        kind = "component"
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform float3 model:drawModeColor = (0, 1, 0.5)
        rel material:binding = </Materials/Red>
        custom double3 xformOp:translate = (-2, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
        float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    }

    def Sphere "CardSphere" (
        kind = "component"
        prepend apiSchemas = ["GeomModelAPI", "MaterialBindingAPI"]
    )
    {
        uniform float3 model:drawModeColor = (0, 1, 0.5)
        rel material:binding = </Materials/Red>

        uniform token model:drawMode = "cards"
        uniform token model:cardGeometry = "box"

        asset model:cardTextureXNeg = @./cards/XNeg.png@
        asset model:cardTextureXPos = @./cards/XPos.png@
        asset model:cardTextureYNeg = @./cards/YNeg.png@
        asset model:cardTextureYPos = @./cards/YPos.png@
        asset model:cardTextureZNeg = @./cards/ZNeg.png@
        asset model:cardTextureZPos = @./cards/ZPos.png@
        
        custom double3 xformOp:translate = (2, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate"]
        float3[] extent = [(-1, -1, -1), (1, 1, 1)]
    }
}

def Scope "Materials" 
{
    def Material "Red"
    {
        token outputs:surface.connect = </Materials/Red/PreviewSurface.outputs:surface>

        def Shader "PreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (1,0,0)
            float inputs:roughness = 0.125
            token outputs:surface
        }
    }
}


def Camera "main_cam"
{
    float focalLength = 30
    float3 xformOp:translate = (0.5, 0.5, 12)
    float3 xformOp:rotateXYZ = (-12, 35, 0)
    uniform token[] xformOpOrder = ["xformOp:rotateXYZ", "xformOp:translate"]
}