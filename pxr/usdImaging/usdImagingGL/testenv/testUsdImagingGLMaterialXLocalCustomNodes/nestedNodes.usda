#usda 1.0
(
    upAxis = "Z"
)

def Mesh "Plane" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    rel material:binding = </MaterialX/Materials/TestMaterial>
    float3[] extent = [(-2, 0, -2), (2, 0, 2)]
    int[] faceVertexCounts = [4]
    int[] faceVertexIndices = [0, 1, 2, 3]
    point3f[] points = [(-2, 0, -2), (2, 0, -2), (2, 0, 2), (-2, 0, 2)]
    color3f[] primvars:displayColor = [(0, 0.25, 0.5)]
    float2[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1)] (
        interpolation = "vertex"
    )
}

def Scope "MaterialX"(
    references = @./mtlxFiles/nestedNodeMaterials.mtlx@</MaterialX>
    )
{
}

def Xform "lights" 
{
    def DomeLight "DomeLight"
    {
        asset inputs:texture:file = @./images/StinsonBeach.hdr@
        float inputs:intensity = 3
        float xformOp:rotateX:Zup = 90
        uniform token[] xformOpOrder = ["xformOp:rotateX:Zup"]
    }
}

def Camera "Camera"
{
    double3 xformOp:translate = (0, 0, 15)
    float xformOp:rotateX:Zup = 90
    uniform token[] xformOpOrder = ["xformOp:rotateX:Zup","xformOp:translate"]
}
